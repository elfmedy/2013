void hsvColor_features(IplImage* img, unsigned int* feat)
{

	//HSV 非均匀量化表
	const unsigned char colorTableH[37] = {
		0,  0,  
		1,
		2,  2,
		3, 
		4,  4, 
		5,  5,  5,							 
		6,  6,  6, 
		7,  7,  7, 
		8,  8, 
		9,  9,  9,
		10, 10, 10, 10, 
		11, 11, 
		12, 
		13, 13, 13,
		14, 
		15, 15, 
		0, 
		0
	};
	const unsigned char colorTableS[11] = {
		0,0,
		1,1,
		2,2,2,2,
		3,3,
		3
	};
	const unsigned char colorTableV[11] = {
		0,0,
		1,1,
		2,2,2,2,
		3,3,
		3
	};

	for (int y = 0; y < img->height; y++)
	{
		for ( int x = 0; x < img->width; x++)
		{
			double h, s, v;
			pixRGBtoHSVCommon( (unsigned char)(img->imageData + img->widthStep*y)[x*3+2],
				(unsigned char)(img->imageData + img->widthStep*y)[x*3+1],
				(unsigned char)(img->imageData + img->widthStep*y)[x*3+0], h, s, v, 0);

			feat[ 16*colorTableH[(int)(h/10)] + 4*colorTableS[(int)(s/0.1)] + colorTableV[(int)(v/0.1)] ]++;
		}
	}

	//归一化
	int max_bin = 0;
	for (int i = 0; i < 256; i++)
	{    if(feat[i] > max_bin)  max_bin = feat[i];   }

	if (max_bin == 0)  max_bin = 1;

	for (int i = 0; i < 256; i++)
	{    feat[i] = (int)(1000.0 * feat[i]/max_bin);  }
}