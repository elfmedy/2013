所有工程都是使用VS2010编译的，工程中使用的OPENCV的版本是2.4.3

1.svibe 文件夹是结合siltp算子的vibe算法，具体论文中说的比较清楚了。

2.compressiveTracking 文件夹中是卡尔曼滤波和压缩感知跟踪的结合。代码是我在ECCV 2012 Lei Zhang的论文提供的代码的基础上修改的。并没有对其中压缩感知的部分做太多改动，而只是将它的输出结果结合卡尔曼滤波的结果做了融合。主要的修改就是RunTracker.cpp中两部分结果的融合，主要的代码都在main()函数中吧。另外这个算法中用到的背景分割的原始帧和结果都是由svibe得到的（工程中是F盘我没有更改，需要改成自己得到的结果的目录）。

3.MPEG7FexLib_MSVC2010 文件夹中有两个项目，createData是将分割的结果转换成小图片保存，用于test项目的使用。test项目中对分割得出的目标图片提取MPEG-7特征，并且做简单的检索测试。其中CreateDB()生成数据文件，Test()做简单测试（即使用某个图片生成特征，并在数据库中检索来验证正确性）
使用了MPEG7FexLib这个开源库来提取MPEG-7特征。
这个工程只是测试MPEG-7特征的提取和简单检索，其并没有用到我后面的那个视频检索工程中作为特征。视频检索工程中的特征因为写的比较早，虽然使用了主颜色特征，但是并不是MPEG-7算子得出的。

4.Video 文件夹中包含了一个使用C#.NET实现的视频检索的工程，其中有多个项目。createImage项目是C++实现的库文件，嵌入到C#项目中将检索结果集合目标框生成图片。cutImage是上传图片的时候做裁剪的库，嵌入到C#项目中。dlbk是这个检索项目用到的前景分割算法，和我的svibe不一样（因为这个检索的写的比svibe早，所以但是没有用svibe算法）。searchPic用于在数据库中查找图片数据的库，嵌入到C#项目中。等等。
总的来说，工程使用VideoSYS来处理视频提取特征放入数据库，使用Video这个C#项目结合一些C++的库来实现在线的监控视频视频检索。
Video工程的配置可能比较复杂，如果配置不好就算了吧……，可以直接看看源文件好了。因为这个工程只是工程实现，思想在论文中已经做过论述。

我讲毕业论文的一部分做了精简和修改，作为小论文发表在ICIG2013上，Improved Compressive Tracking in Surveillance Scenes，这篇论文提供了svibe和压缩感知滤波的一些代码，也可以可以作为参考。

如果有问题，可以通过邮件联系我，我会努力回复，不过不太希望被问到工程为什么不能正常编译这一类的问题。